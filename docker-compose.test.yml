version: '3.8'

services:
  # Test Database
  test-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: harmony_test
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
    ports:
      - "5433:5432"
    volumes:
      - test-db-data:/var/lib/postgresql/data
    command: postgres -c 'max_connections=200'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d harmony_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test Redis
  test-redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test Blockchain Node
  test-blockchain:
    image: ethereum/client-go:latest
    command: >
      --dev
      --dev.period 1
      --http
      --http.addr 0.0.0.0
      --http.port 8545
      --http.corsdomain "*"
      --http.api "web3,eth,net,personal,miner"
      --ws
      --ws.addr 0.0.0.0
      --ws.port 8546
      --ws.origins "*"
      --ws.api "web3,eth,net,personal,miner"
      --allow-insecure-unlock
      --unlock 0
      --password /dev/null
      --mine
      --miner.threads 1
      --miner.etherbase 0x0000000000000000000000000000000000000000
    ports:
      - "8546:8545"
      - "8547:8546"
    healthcheck:
      test: ["CMD-SHELL", "curl -X POST -H 'Content-Type: application/json' -d '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}' http://localhost:8545"]
      interval: 10s
      timeout: 5s
      retries: 10

  # Test API Server
  test-api:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      test-db:
        condition: service_healthy
      test-redis:
        condition: service_healthy
      test-blockchain:
        condition: service_healthy
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://testuser:testpass@test-db:5432/harmony_test
      REDIS_URL: redis://test-redis:6379
      BLOCKCHAIN_RPC_URL: http://test-blockchain:8545
      JWT_SECRET: test-secret-key
      PORT: 3000
    ports:
      - "3001:3000"
    volumes:
      - ./src:/app/src
      - ./test:/app/test
    command: npm run test:e2e
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Load Testing Service
  test-load:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      test-api:
        condition: service_healthy
    environment:
      TEST_BASE_URL: http://test-api:3000
      LOAD_TEST_DURATION: 60000
      LOAD_TEST_CONCURRENCY: 500
      LOAD_TEST_TARGET_TPS: 1000
    volumes:
      - ./test:/app/test
      - ./reports:/app/reports
    command: npm run test:load
    profiles:
      - load-test

volumes:
  test-db-data:

networks:
  default:
    driver: bridge