version: '3.8'

services:
  # FastAPI Backend
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - SECRET_KEY=dev-secret-key-change-in-production
      - SQLITE_DATABASE_URL=sqlite:///./data/eesystem.db
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./data:/app/data
      - ./uploads:/app/uploads
    depends_on:
      - redis
    restart: unless-stopped

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Celery Worker
  celery_worker:
    build: 
      context: .
      dockerfile: Dockerfile
    command: celery -A services.celery_app worker --loglevel=info --queues=document_processing,content_generation,publishing,ai_analysis,maintenance
    environment:
      - DEBUG=true
      - SECRET_KEY=dev-secret-key-change-in-production
      - SQLITE_DATABASE_URL=sqlite:///./data/eesystem.db
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./data:/app/data
      - ./uploads:/app/uploads
    depends_on:
      - redis
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery_beat:
    build: 
      context: .
      dockerfile: Dockerfile
    command: celery -A services.celery_app beat --loglevel=info
    environment:
      - DEBUG=true
      - SECRET_KEY=dev-secret-key-change-in-production
      - SQLITE_DATABASE_URL=sqlite:///./data/eesystem.db
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./data:/app/data
    depends_on:
      - redis
    restart: unless-stopped

  # Flower (Celery Monitoring)
  flower:
    build: 
      context: .
      dockerfile: Dockerfile
    command: celery -A services.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  redis_data: