apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
      evaluation_interval: 30s
      external_labels:
        cluster: agentflow-cluster
        environment: production
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093
    
    scrape_configs:
      # Kubernetes API server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https
      
      # Kubernetes nodes
      - job_name: 'kubernetes-nodes'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics
      
      # Kubernetes pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
      
      # AgentFlow API specific
      - job_name: 'agentflow-api'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - agentflow
            - agentflow-staging
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: agentflow-api.*-metrics
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_service_name
        scrape_interval: 15s
        metrics_path: /metrics
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: monitoring
  labels:
    app: prometheus
data:
  agentflow-api.yml: |
    groups:
    - name: agentflow-api
      rules:
      # High-level SLA metrics
      - alert: AgentFlowAPIHighLatency
        expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{job="agentflow-api"}[5m])) by (le, instance)) > 0.5
        for: 5m
        labels:
          severity: warning
          service: agentflow-api
        annotations:
          summary: "AgentFlow API has high latency"
          description: "95th percentile latency is {{ $value }}s for instance {{ $labels.instance }}"
      
      - alert: AgentFlowAPIHighErrorRate
        expr: sum(rate(http_requests_total{job="agentflow-api",status=~"5.."}[5m])) by (instance) / sum(rate(http_requests_total{job="agentflow-api"}[5m])) by (instance) > 0.1
        for: 5m
        labels:
          severity: critical
          service: agentflow-api
        annotations:
          summary: "AgentFlow API has high error rate"
          description: "Error rate is {{ $value | humanizePercentage }} for instance {{ $labels.instance }}"
      
      # Resource utilization
      - alert: AgentFlowAPIHighCPU
        expr: sum(rate(container_cpu_usage_seconds_total{pod=~"agentflow-api-.*"}[5m])) by (pod) / sum(container_spec_cpu_quota{pod=~"agentflow-api-.*"}/container_spec_cpu_period{pod=~"agentflow-api-.*"}) by (pod) > 0.8
        for: 10m
        labels:
          severity: warning
          service: agentflow-api
        annotations:
          summary: "AgentFlow API pod has high CPU usage"
          description: "CPU usage is {{ $value | humanizePercentage }} for pod {{ $labels.pod }}"
      
      - alert: AgentFlowAPIHighMemory
        expr: sum(container_memory_working_set_bytes{pod=~"agentflow-api-.*"}) by (pod) / sum(container_spec_memory_limit_bytes{pod=~"agentflow-api-.*"}) by (pod) > 0.8
        for: 10m
        labels:
          severity: warning
          service: agentflow-api
        annotations:
          summary: "AgentFlow API pod has high memory usage"
          description: "Memory usage is {{ $value | humanizePercentage }} for pod {{ $labels.pod }}"
      
      # Service availability
      - alert: AgentFlowAPIDown
        expr: up{job="agentflow-api"} == 0
        for: 1m
        labels:
          severity: critical
          service: agentflow-api
        annotations:
          summary: "AgentFlow API is down"
          description: "AgentFlow API instance {{ $labels.instance }} is down"
      
      - alert: AgentFlowAPIRestarting
        expr: increase(kube_pod_container_status_restarts_total{pod=~"agentflow-api-.*"}[15m]) > 0
        for: 0m
        labels:
          severity: warning
          service: agentflow-api
        annotations:
          summary: "AgentFlow API pod is restarting"
          description: "Pod {{ $labels.pod }} has restarted {{ $value }} times in the last 15 minutes"
      
      # Request volume
      - alert: AgentFlowAPILowTraffic
        expr: sum(rate(http_requests_total{job="agentflow-api"}[5m])) < 1
        for: 30m
        labels:
          severity: warning
          service: agentflow-api
        annotations:
          summary: "AgentFlow API has unusually low traffic"
          description: "Request rate is {{ $value }} req/s, which is below expected threshold"
      
      - alert: AgentFlowAPIHighTraffic
        expr: sum(rate(http_requests_total{job="agentflow-api"}[5m])) > 1000
        for: 5m
        labels:
          severity: warning
          service: agentflow-api
        annotations:
          summary: "AgentFlow API has unusually high traffic"
          description: "Request rate is {{ $value }} req/s, which is above normal levels"
      
      # Database connections
      - alert: AgentFlowAPIHighDBConnections
        expr: sum(pg_stat_activity_count{job="agentflow-api"}) by (instance) > 50
        for: 5m
        labels:
          severity: warning
          service: agentflow-api
        annotations:
          summary: "AgentFlow API has high database connections"
          description: "Database connections: {{ $value }} for instance {{ $labels.instance }}"
      
      # Rate limiting
      - alert: AgentFlowAPIRateLimited
        expr: sum(rate(http_requests_total{job="agentflow-api",status="429"}[5m])) > 10
        for: 5m
        labels:
          severity: warning
          service: agentflow-api
        annotations:
          summary: "AgentFlow API has high rate limiting"
          description: "Rate limited requests: {{ $value }} req/s"
    
    - name: agentflow-infrastructure
      rules:
      # Disk space
      - alert: AgentFlowDiskSpaceHigh
        expr: (1 - (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"})) > 0.8
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Disk space usage is high"
          description: "Disk usage is {{ $value | humanizePercentage }} on {{ $labels.device }} at {{ $labels.instance }}"
      
      # Network
      - alert: AgentFlowHighNetworkTraffic
        expr: sum(rate(node_network_receive_bytes_total[5m])) by (instance) > 100000000
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High network traffic"
          description: "Network traffic is {{ $value | humanizeBytes }}B/s on {{ $labels.instance }}"