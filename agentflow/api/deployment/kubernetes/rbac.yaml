apiVersion: v1
kind: ServiceAccount
metadata:
  name: agentflow-api
  namespace: agentflow
  labels:
    app: agentflow-api
    component: rbac
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: agentflow-api-role
  namespace: agentflow
  labels:
    app: agentflow-api
    component: rbac
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: agentflow-api-role-binding
  namespace: agentflow
  labels:
    app: agentflow-api
    component: rbac
subjects:
- kind: ServiceAccount
  name: agentflow-api
  namespace: agentflow
roleRef:
  kind: Role
  name: agentflow-api-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: policy/v1
kind: PodSecurityPolicy
metadata:
  name: agentflow-api-psp
  labels:
    app: agentflow-api
    component: security
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: true